diff --git a/src/i965_render.c b/src/i965_render.c
index 4adfba6..bca3b63 100644
--- a/src/i965_render.c
+++ b/src/i965_render.c
@@ -54,6 +54,8 @@ static const uint32_t sf_kernel_static[][4] =
 
 #define PS_KERNEL_NUM_GRF       32
 #define PS_MAX_THREADS          32
+#define VLV_X0_PS_MAX_THREADS   16
+#define VLV_A0_PS_MAX_THREADS   48
 
 #define I965_GRF_BLOCKS(nreg)	((nreg + 15) / 16 - 1)
 
@@ -2814,11 +2816,27 @@ gen7_emit_wm_state(VADriverContextP ctx, int kernel)
               (1 << GEN7_PS_SAMPLER_COUNT_SHIFT) |
               (5 << GEN7_PS_BINDING_TABLE_ENTRY_COUNT_SHIFT));
     OUT_BATCH(batch, 0); /* scratch space base offset */
-    OUT_BATCH(batch, 
-              ((86 - 1) << max_threads_shift) | num_samples |
-              GEN7_PS_PUSH_CONSTANT_ENABLE |
-              GEN7_PS_ATTRIBUTE_ENABLE |
-              GEN7_PS_16_DISPATCH_ENABLE);
+    if (IS_VALLEYVIEW(i965->intel.device_id)) {
+        if (i965->intel.device_id == PCI_CHIP_VLV2) {
+            OUT_BATCH(batch, 
+                 ((VLV_A0_PS_MAX_THREADS - 1) << max_threads_shift) | num_samples |
+              	  GEN7_PS_PUSH_CONSTANT_ENABLE |
+              	  GEN7_PS_ATTRIBUTE_ENABLE |
+              	  GEN7_PS_16_DISPATCH_ENABLE);
+        } else {
+            OUT_BATCH(batch, 
+                 ((VLV_X0_PS_MAX_THREADS - 1) << max_threads_shift) | num_samples |
+              	  GEN7_PS_PUSH_CONSTANT_ENABLE |
+              	  GEN7_PS_ATTRIBUTE_ENABLE |
+              	  GEN7_PS_16_DISPATCH_ENABLE);
+        }
+    } else {
+        OUT_BATCH(batch,
+                  ((86 - 1) << max_threads_shift) | num_samples |
+                  GEN7_PS_PUSH_CONSTANT_ENABLE |
+                  GEN7_PS_ATTRIBUTE_ENABLE |
+                  GEN7_PS_16_DISPATCH_ENABLE);
+   }
     OUT_BATCH(batch, 
               (6 << GEN7_PS_DISPATCH_START_GRF_SHIFT_0));
     OUT_BATCH(batch, 0); /* kernel 1 pointer */
diff --git a/src/intel_driver.h b/src/intel_driver.h
index 8d83469..77fb2f1 100644
--- a/src/intel_driver.h
+++ b/src/intel_driver.h
@@ -172,6 +172,11 @@ struct intel_region
 #define PCI_CHIP_IVYBRIDGE_S_GT1        0x015a  /* Server */
 #define PCI_CHIP_IVYBRIDGE_S_GT2        0x016a
 
+#define PCI_CHIP_VLV1                   0x0f30
+#define PCI_CHIP_VLV2                   0x0f31
+#define PCI_CHIP_VLV3                   0x0f32
+#define PCI_CHIP_VLV4                   0x0f33
+
 #define PCI_CHIP_HASWELL_GT1            0x0402 /* Desktop */
 #define PCI_CHIP_HASWELL_GT2            0x0412
 #define PCI_CHIP_HASWELL_GT2_PLUS       0x0422
@@ -226,6 +231,11 @@ struct intel_region
 #define IS_IRONLAKE_M(devid)    (devid == PCI_CHIP_IRONLAKE_M_G)
 #define IS_IRONLAKE(devid)      (IS_IRONLAKE_D(devid) || IS_IRONLAKE_M(devid))
 
+#define IS_VALLEYVIEW(devid)   (devid == PCI_CHIP_VLV1 || \
+                                devid == PCI_CHIP_VLV2 || \
+                                devid == PCI_CHIP_VLV3 || \
+                                devid == PCI_CHIP_VLV4)
+
 #define IS_HASWELL_ULT(devid)   (devid == PCI_CHIP_HASWELL_ULT_GT1	|| \
 				 devid == PCI_CHIP_HASWELL_ULT_GT2	|| \
 				 devid == PCI_CHIP_HASWELL_ULT_GT2_PLUS	|| \
@@ -285,6 +295,7 @@ struct intel_region
                                  devid == PCI_CHIP_IVYBRIDGE_M_GT2 ||   \
                                  devid == PCI_CHIP_IVYBRIDGE_S_GT1 ||   \
                                  devid == PCI_CHIP_IVYBRIDGE_S_GT2 ||   \
+				 IS_VALLEYVIEW(devid) ||		\
                                  IS_HASWELL(devid))
 
 #ifndef I915_EXEC_VEBOX
diff --git a/src/gen7_mfd.c b/src/gen7_mfd.c
index 5b36c8d..2967347 100755
--- a/src/gen7_mfd.c
+++ b/src/gen7_mfd.c
@@ -191,7 +191,7 @@ gen7_mfd_init_avc_surface(VADriverContextP ctx,
     if (gen7_avc_surface->dmv_top == NULL) {
         gen7_avc_surface->dmv_top = dri_bo_alloc(i965->intel.bufmgr,
                                                  "direct mv w/r buffer",
-                                                 width_in_mbs * height_in_mbs * 64,
+                                                 width_in_mbs * (height_in_mbs + 1) * 64,
                                                  0x1000);
         assert(gen7_avc_surface->dmv_top);
     }
@@ -200,7 +200,7 @@ gen7_mfd_init_avc_surface(VADriverContextP ctx,
         gen7_avc_surface->dmv_bottom == NULL) {
         gen7_avc_surface->dmv_bottom = dri_bo_alloc(i965->intel.bufmgr,
                                                     "direct mv w/r buffer",
-                                                    width_in_mbs * height_in_mbs * 64,                                                    
+                                                    width_in_mbs * (height_in_mbs + 1) * 64,                                                    
                                                     0x1000);
         assert(gen7_avc_surface->dmv_bottom);
     }
